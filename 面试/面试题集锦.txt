
==============================================================================================================================
ES6
==============================================================================================================================
es6异步/并发操作 https://www.cnblogs.com/jaxu/p/6592210.html
es6 this指向 https://www.jianshu.com/p/2a403f010657
ES6 改变this指向 call、apply、bind  https://blog.csdn.net/weixin_45959504/article/details/105904843



==============================================================================================================================
webpack
==============================================================================================================================
webpack 异步加载 
webpack使用require.ensure将vue页面打包成独立的chunk文件，也可以将多个vue页面合并成一个chunk文件，以实现生产环境按需加载。

==============================================================================================================================
vue
==============================================================================================================================
vue & axios https://www.jianshu.com/p/d771bbc61dab
vuex
vue.nextTick()方法的使用
子父组件通信
vue 实现防抖、节流
==============================================================================================================================
浏览器
==============================================================================================================================

前端浏览器的两种缓存:协商缓存和强缓存

前端继承方式汇总    
https://www.cnblogs.com/baixiaoxiao/p/11046666.html   
https://www.cnblogs.com/shamoyuu/p/4770235.html


==============================================================================================================================
状态管理
==============================================================================================================================
react有redux，vue有vuex，angular2 有ngrx(ngrx是Angular基于Rxjs的状态管理)


==============================================================================================================================
angular2中数据状态管理方案有哪些？

首先，是谁告诉你React，Vue用了状态管理，
Angular也一定得用的？React，Vue是典型的shadowDom的MVVM模式，Angular是多范式的。数据驱动才"状态管理"，
事件驱动流式编程是指定数据变化关系而不是具体的数据的！即便是采用MVVM的模式，
Angular也可以通过依赖注入(具体数据)或者面向对象的方式解耦。知道有人会说ngRx，说实话我在ngRx这个莫名其妙的库上浪费了不少时间，
这个库给自己加了那么多戏，只是为了一个Redux的编程习惯，真的让人哭笑不得，不火是有原因的，毕竟只是个吸引React平台程序员的筹码。
状态管理维持不变性只是给你类似函数式编程的体验，事件流是较为纯粹的函数响应式编程——压根思考方式上就没有数据。
这样的问题就相当于问：Haskell，Racket为什么不用状态管理？别人都没有全局变量，想状态管理都不行，这不出难题么？
就不能安安心心用state monad?你看，这个state monad很明显抄袭了Redux！
https://www.zhihu.com/question/46662780


==============================================================================================================================
图表&可视化
==============================================================================================================================
d3.js 可视化

百度 echarts
可视化本地使用（不联网）
echarts 插入离线地图